snippet ife
if (${1:true}) {
	$2
}
else {
	$3
}
$0
endsnippet

snippet if
if (${1:true}) {
	$2
}
$0
endsnippet

snippet fun
function${1: ${2:defaultName}}($3){
	$4
}
endsnippet

snippet :f "method"
$1: function($3) {
	$4
}${2:,}
endsnippet

snippet me
module.exports = {
	$1
}
endsnippet

snippet mef
module.exports = function${1: ${2:defaultName}}($3) {
	$4
}
endsnippet

snippet fac
$1: React.createFactory('$1')${2:,}
endsnippet

snippet cl
console.log(${1:'value'})$0
endsnippet

snippet re
var $1 = require('${2:$1}')
endsnippet

snippet for
for(var ${1:key} in ${2:obj}) {
	$0
}
endsnippet

#
#Express
#
snippet get
app.get('$1', function(req, res) {
	$2
})
$0
endsnippet

snippet post
app.post('$1', function(req, res) {
	$2
})
$0
endsnippet

#
#React
#
snippet tss "set state" b
this.setState({
	${1}: ${2}
})$0
endsnippet

snippet props "get property" i
this.props.${1}
endsnippet

snippet state "get state" i
this.state.${1}
endsnippet

snippet rcc "create class/component" b
${1:var React = require('react')}
var ${2:ClassName} = React.createClass({

	render: function() {
		return (
			${VISUAL}$4
		)
	}

})
$0
${3:module.exports = $2}
endsnippet

snippet cdm "component did mount" b
componentDidMount: function() {
	${1}
},$0
endsnippet

snippet cdup "component did update" b
componentDidUpdate: function(prevProps, prevState) {
	${1}
},$0
endsnippet

snippet cwm "component will mount" b
componentWillMount: function() {
	${1}
},$0
endsnippet

snippet cwr "component will receive props" b
componentWillReceiveProps: function(nextProps) {
	${1}
},$0
endsnippet

snippet cwun "component will unmount" b
componentWillUnmount: function() {
	${1}
},$0
endsnippet

snippet cwup "component will update" b
componentWillUpdate: function(nextProps, nextState) {
	${1}
},$0
endsnippet

snippet fup
forceUpdate(${1:callback})
endsnippet

snippet gdp "get default props" b
getDefaultProps: function() {
	return {
		${1}
	}
},$0
endsnippet

snippet gis "get initial state" b
getInitialState: function() {
	return {
		${1}: ${2}
	}
},$0
endsnippet

snippet ism "is mounted"
isMounted()
endsnippet

snippet pt "propTypes" b
propTypes: {
	${1}: React.PropTypes.${2:string}
},
endsnippet

snippet ren
render: function() {
	return (
		${1:<div />}
	)
}$0
endsnippet

snippet scu "should component update"
shouldComponentUpdate: function(nextProps, nextState) {
	${1}
},$0
endsnippet

snippet jsx "define jsx dom" b
/**
 * @jsx React.DOM
 */
endsnippet

#
#ES6
#

snippet ef "export function"
	export function $1($2) {
		$3
	}
endsnippet

snippet efi "export function inline"
	export function $1($2) { $3 }
endsnippet
